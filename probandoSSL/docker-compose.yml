services:
#reverse Proxy con Nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "1028:1028" # Puerto externo para acceder a los servicios
    volumes:
      - ./nginx-data/default.conf:/etc/nginx/conf.d/default.conf # Configuración de Nginx
    depends_on:
      - nodered
      - portainer

  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    restart: unless-stopped
    ports:
      - "1880:1880"        # HTTP (opcional, si no usas SSL directamente)
      - "8443:8443"        # HTTPS
    volumes:
      - node-red-data:/data       # Datos persistentes de Node-RED
      - ./certs:/certs:ro  # Certificados SSL
    environment:
      - TZ=Europe/Madrid

  portainer:
    # image: portainer/portainer-ee:2.21.5
    image: portainer/portainer
    container_name: portainer
    # depends_on:
    #   - certificate
    restart: unless-stopped
    ports:
      - "9443:9443"
      # - "80:9000"
    volumes:
      - ./portainer_data:/data
      - ./certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      --sslcert /certs/127.0.0.1/127.0.0.1.crt
      --sslkey /certs/127.0.0.1/127.0.0.1.key
      # --sslcert /certs/192.168.0.35.crt
      # --sslkey /certs/192.168.0.35.key

  certificate:
    image: cert-gen
    container_name: certificados
    volumes:
    - ./certs:/certs
    environment:
    - DOMAIN=127.0.0.1
    - SUBJ_C=ES
    - SUBJ_ST=Valencia
    - SUBJ_L=Valencia
    - SUBJ_O="Seguridad de las Cosas"
    - SUBJ_OU=SCO

  # nodered:
  #   image: nodered/node-red:latest
  #   container_name: nodered
  #   restart: unless-stopped
  #   volumes:
  #     - nodered-data:/data
  #   ports:
  #     - "1880:1880" # Puerto directo de Node-RED (opcional si solo se usará vía proxy)
  #   networks:
  #     - app-network

# networks:
#   app-network:

volumes:
  portainer-data:
  nodered-data:
  # nginx-data:
  # portainer_data:
  node-red-data: